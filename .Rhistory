image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
#img_data <- image_write(img_scaled, format = 'rgba')
return(NULL)
}
}
convert_img(train_data[1:2, ], 'train')
convert_img(train_data[1:2, ], 'train')
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = c, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba')
return(img_data)
}
}
convert_img(train_data[1:2, ], 'train')
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba')
return(img_data)
}
}
convert_img(train_data[1:2, ], 'train')
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba')
return(c(i, img_data))
}
}
convert_img(train_data[1:10, ], 'train')
x <- convert_img(train_data[1:10, ], 'train')
View(x)
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(c(i, img_data))
}
}
x <- convert_img(train_data[1:10, ], 'train')
View(x)
ncol(x)
stopCluster(cl)
source('code/include.R', echo = T)
# File paths
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
# File lists
train_files <- list.files('data/raw/train/')
test_files <- list.files('data/raw/test/')
# Pre-process names
train_data <- data_frame(raw_name = train_files) %>%
tbl_df() %>%
mutate(id = str_pad(str_extract(raw_name, '\\d+'), 5, pad = '0'),
class = ifelse(str_detect(raw_name, 'dog'), 'dog', 'cat')) %>%
arrange(class, id)
test_data <- data_frame(raw_name = test_files) %>%
tbl_df() %>%
mutate(id = str_pad(str_extract(raw_name, '\\d+'), 5, pad = '0'),
class = NA) %>%
arrange(id)
# Register a cluster and convert image data from character vector to integer matrix
cl <- makeCluster(4)
registerDoSNOW(cl)
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(c(i, img_data))
}
}
train_df <- convert_img(train_data[1:100,], 'train')
#test_df <- convert_img(test_data, 'test')
stopCluster(cl)
write_csv(train_df, 'data/train.csv')
write_csv(test_df, 'data/train.csv')
train_data[1:100,]
cl <- makeCluster(4)
registerDoSNOW(cl)
train_df <- convert_img(train_data[1:100,], 'train')
train_df <- convert_img(train_data[1:10,], 'train')
train_df
write_csv(train_df, 'data/train.csv')
train_df <- convert_img(train_data[1:10,], 'train') %>% as.data.frame()
train.csv
write_csv(train_df, 'data/train.csv')
str(train_df)
train_df <- convert_img(train_data[1:10,], 'train')
str(train_df)
write_csv(train_df, 'data/train.csv')
train_df %>% as.data.frame()
train_df %<>% as.data.frame()
write_csv(train_df, 'data/train.csv')
str(train_df)
train_df[1,1]
train_df[,1]
train_df <- convert_img(train_data[1:10,], 'train') %>%
unlist() %>%
as.data.frame()
train_df[,1]
train_df[1,]
train_df[2,]
train_df[3,]
View(train_df)
train_df <- convert_img(train_data[1:10,], 'train')
View(train_df)
type(train_df)
is.type(train_df)
typeof(train_df)
train_df[[1]]
train_df[[2]]
train_df[1]
train_df[11]
x <- do.call('rbind', train_df)
x
View(x)
train_df <- convert_img(train_data[1:10,], 'train') %>%
as.data.frame()
View(train)df
View(train_df)
train_df$raw_name
train_df[,1]
train_df[['raw_name']]
train_df <- convert_img(train_data[1:50,], 'train') %>%
as.data.frame()
train_df <- convert_img(train_data[1:44,], 'train') %>%
as.data.frame()
View(train_df)
train_df <- convert_img(train_data[45,], 'train') %>%
as.data.frame()
train_df
train_df <- convert_img(train_data[45:46,], 'train') %>%
as.data.frame()
train_data[45,]
i=train_data[54,]
i=train_data[45,]
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
img_data
img_data[1:10,]
img_data[1:10]
i
c(i, img_data)
img_data
i = train_data[44,]
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
length(img_data)
train_df <- convert_img(train_data[44,], 'train') %>%
as.data.frame()
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
i
data_class = 'train'
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
length(img_data)
i=45
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
i
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(length(img_data))
}
}
train_df <- convert_img(train_data[1:100,], 'train')
train_df
i = train_data[45,]
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, "x", img_fill_y)) %>%
image_scale("64x64")
img_scaled
img
?image_border
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img_fill_x <- max(0, img_y - img_x) / 2
img_fill_y <- max(0, img_x - img_y) / 2
img_scaled <-
image_border(img, "grey", str_c('0x0+', img_fill_x, '+', img_fill_y)) %>%
image_scale("64x64")
img_scaled
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img <- image_scale(img, str_c(2 * img_fill_x, 'x', 2 * img_fill_y))
img
img <- image_read(
img <- image_read(read_path)
img <- image_read(read_path)
img
?img_scale
image_scale
?image_scale
str_c(2 * img_fill_x, 'x', 2 * img_fill_y)
img <- image_scale(img, str_c(2 * img_x, 'x', 2 * img_y))
img
img_fill_x <- max(0, img_y - img_x)
img_fill_y <- max(0, img_x - img_y)
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, 'x', img_fill_y)) %>%
image_scale("64x64")
img_scaled
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
image_write(img_scaled, write_path, format = 'jpg')
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img <- image_scale(img, str_c(2 * img_x, 'x', 2 * img_y))
img_fill_x <- max(0, img_y - img_x)
img_fill_y <- max(0, img_x - img_y)
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, 'x', img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(length(img_data))
}
}
train_df <- convert_img(train_data[1:100,], 'train') %>%
as.data.frame()
train_df
# Pad and resize images
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img <- image_scale(img, str_c(2 * img_x, 'x', 2 * img_y))
img_fill_x <- max(0, img_y - img_x)
img_fill_y <- max(0, img_x - img_y)
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, 'x', img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(c(i, img_data))
}
}
train_df <- convert_img(train_data[1:10,], 'train')
train_df
View(train_df)
train_df %>% as.matrix
train_df %>% as.matrix %>% View()
train_df <- convert_img(train_data[1:10,], 'train') %>%
as.matrix()
write_csv(train_df, 'data/train.csv')
?write_csv
x
typeof(x)
typeof(train_df)
x = data.frame(a = 1, b=2)
typeof(x)
train_df <- convert_img(train_data[1:10,], 'train') %>%
as.data.frame()
write_csv(train_df, 'data/train.csv')
train_df
View(train_df)
train_df$V40
rownames(df_train)
rownames(train_df)
rownames(train_df) <- NULL
train_df$V40
View(train_df)
convert_img <- function(x, data_class) {
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
foreach(i = iter(x, by='row'), .combine = rbind, .packages = c('magick', 'magrittr', 'stringr')) %dopar% {
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- image_read(read_path)
img_x <- image_info(img)$width
img_y <- image_info(img)$height
img <- image_scale(img, str_c(2 * img_x, 'x', 2 * img_y))
img_fill_x <- max(0, img_y - img_x)
img_fill_y <- max(0, img_x - img_y)
img_scaled <-
image_border(img, "grey", str_c(img_fill_x, 'x', img_fill_y)) %>%
image_scale("64x64")
image_write(img_scaled, write_path, format = 'jpg')
img_data <- image_write(img_scaled, format = 'rgba') %>% as.integer()
return(c(as.vector(i), img_data))
}
}
train_df <- convert_img(train_data[1:10,], 'train') %>%
as.data.frame()
View(train_df)
train_df$V40
?foreach
install.packages('imager')
source('code/include.R', echo = T)
# File paths
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
# File lists
train_files <- list.files('data/raw/train/')
test_files <- list.files('data/raw/test/')
# Pre-process names
train_data <- data_frame(raw_name = train_files) %>%
tbl_df() %>%
mutate(id = str_pad(str_extract(raw_name, '\\d+'), 5, pad = '0'),
class = ifelse(str_detect(raw_name, 'dog'), 'dog', 'cat')) %>%
arrange(class, id)
test_data <- data_frame(raw_name = test_files) %>%
tbl_df() %>%
mutate(id = str_pad(str_extract(raw_name, '\\d+'), 5, pad = '0'),
class = NA) %>%
arrange(id)
RAW_PATH <- 'data/raw/'
PROC_PATH <- 'data/processed/'
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
write_path <- str_c(PROC_PATH, data_class, '/', i$class, i$id, '.jpg')
img <- load.image(read_path)
library(imager)
img <- load.image(read_path)
img
plot(img)
read_path
i = train_data[60,]
img <- load.image(read_path)
img
plot(img)
read_path  <- str_c(RAW_PATH, data_class, '/', i$raw_name)
img <- load.image(read_path)
plot(img)
img
plot(grayscale(img))
grayscale(img) %>% hist()
img %>% hist()
imgdf <- as.data.frame(img)
bdf <- plyr::mutate(imgdf,channel=factor(cc,labels=c('R','G','B')))
ggplot(bdf,aes(value,col=channel))+geom_histogram(bins=30)+facet_wrap(~ channel)
imgdf
head(imgdf)
imgdf$cc %>% levels()
imgdf$cc %>% unique()
f(img)
f <- ecdf(img)
f
plot(f)
plot(f, type = 'l')
f(img)
f(img) %>% hist()
f(img) %>% plot()
imgdf
head(imgdf)
img.g <- grayscale(img)
img.g
plot(img.g)
as.data.frame(img.g)
as.data.frame(img.g) %>% head()
img.g %>% hist
ecdf
?ecdf
f <- ecdf(img.g)
f
plot(f)
f(img.g)
f(img.g) %>% hist()
f(img.g) %>% as.cimg(dim=dim(img.g))
f(img.g) %>% as.cimg(dim=dim(img.g)) %>% plot()
plot(img.g)
f(img.g) %>% as.cimg(dim=dim(img.g)) %>% plot()
